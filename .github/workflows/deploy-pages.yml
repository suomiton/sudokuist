name: 🚀 Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📚 Checkout repository
      uses: actions/checkout@v4

    - name: 🦀 Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown

    - name: 📦 Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: 🌐 Install wasm-pack
      uses: jetli/wasm-pack-action@v0.4.0
      with:
        version: 'latest'

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 📦 Install npm dependencies
      run: npm ci

    - name: 🔧 Setup Pages
      uses: actions/configure-pages@v4
      with:
        static_site_generator: vite

    - name: 🏗️ Build WASM (Release)
      run: |
        echo "🦀 Building WASM with release optimizations..."
        wasm-pack build --target web --out-dir pkg --release

    - name: 🏗️ Build TypeScript and Bundle
      run: |
        echo "📁 Copying WASM files for TypeScript..."
        cp -r pkg src/
        echo "📁 Copying WASM files to public directory for Vite..."
        cp pkg/sudoku_wasm.js pkg/sudoku_wasm_bg.wasm public/
        echo "🔨 Building with Vite in production mode..."
        NODE_ENV=production npm run type-check
        NODE_ENV=production npx vite build --mode production --base=/sudokuist/

    - name: 📋 Copy additional assets
      run: |
        echo "📋 Copying additional styles..."
        mkdir -p dist/styles
        cp -r styles/* dist/styles/ 2>/dev/null || true
        echo "📋 Verifying WASM files are in place..."
        ls -la dist/sudoku_wasm* || echo "WASM files not found in dist, this might cause loading issues"

    - name: 📊 Generate build report
      run: |
        echo "📊 Generating build analysis..."
        echo "## Build Size Report" > build-report.md
        echo "\`\`\`" >> build-report.md
        du -sh dist/* | sort -hr >> build-report.md
        echo "\`\`\`" >> build-report.md
        echo "" >> build-report.md
        echo "### Compressed Sizes" >> build-report.md
        echo "\`\`\`" >> build-report.md
        find dist -name "*.js" -o -name "*.css" | while read file; do
          original_size=$(stat -c%s "$file")
          gzipped_size=$(gzip -c "$file" | wc -c)
          echo "$(basename "$file"): ${original_size} bytes → ${gzipped_size} bytes (gzipped)" >> build-report.md
        done
        echo "\`\`\`" >> build-report.md
        cp build-report.md dist/

    - name: 📤 Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

  # Deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: 📝 Comment deployment URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🚀 **Deployment Preview**: ${{ steps.deployment.outputs.page_url }}'
          })
